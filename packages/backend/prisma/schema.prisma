// Prisma schema, more in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conversation {
  id          Int               @id @default(autoincrement())
  title       String
  documentId  Int?
  document    DocumentMetadata? @relation("DocumentMetadata", fields: [documentId], references: [id])
  chatHistory Message[]
  botId       Int?
  bot         Bot?              @relation(fields: [botId], references: [id])
}

model Bot {
  id              Int              @id @default(autoincrement())
  name            String           @unique()
  conversation    Conversation[]
  description     String?
  type            BotType
  configVersion   String           @default("0.0.1")
  configuration   Json
  discordMessages DiscordMessage[]

  @@index(fields: [name])
}

model Message {
  id             Int           @id @default(autoincrement())
  type           String
  content        String
  fromId         Int?
  fromType       String
  conversationId Int?
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
}

model DiscordConversation {
  id          String           @id
  chatHistory DiscordMessage[]

  @@index(fields: [id])
}

model DiscordMessage {
  id                    String               @id
  createdAt             DateTime
  content               String
  discordConversationId String?
  isBot                 Boolean              @default(false)
  authorId              String
  username              String
  botId                 Int?
  conversation          DiscordConversation? @relation(fields: [discordConversationId], references: [id])
  bot                   Bot?                 @relation(fields: [botId], references: [id])

  @@index(fields: [id, discordConversationId])
}

model DocumentMetadata {
  id                   Int            @id @default(autoincrement())
  title                String
  size                 Int
  url                  String
  embeddedAt           DateTime       @default(now())
  embeddingStatus      String
  conversationDocument Conversation[] @relation("DocumentMetadata")
}

enum BotType {
  CONVERSATIONAL
  RETRIEVAL_CONVERSATIONAL
}
